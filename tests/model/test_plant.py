import datetime
import json

import pytest

from givenergy_modbus.model.battery import Battery
from givenergy_modbus.model.inverter import Inverter  # type: ignore  # shut up mypy
from givenergy_modbus.model.plant import Plant
from givenergy_modbus.model.register import HoldingRegister, InputRegister  # type: ignore  # shut up mypy
from givenergy_modbus.model.register_cache import RegisterCache
from givenergy_modbus.pdu.read_registers import ReadRegistersResponse
from givenergy_modbus.pdu.write_registers import WriteHoldingRegisterResponse
from tests import CLIENT_MESSAGES, PduTestCaseSig, _lookup_pdu_class
from tests.model.test_register_cache import (  # noqa: F401
    register_cache,
    register_cache_battery_daytime_discharging,
    register_cache_inverter_daytime_discharging_with_solar_generation,
)


@pytest.fixture
def plant():
    """Yield a Plant."""
    p = Plant()
    yield p


def test_default_instantiation(plant):
    assert plant.dict() == {
        'register_caches': {
            0: {'slave_address': 0},
            17: {'slave_address': 17},
            48: {'slave_address': 48},
            49: {'slave_address': 49},
            50: {'slave_address': 50},
            51: {'slave_address': 51},
            52: {'slave_address': 52},
            53: {'slave_address': 53},
            54: {'slave_address': 54},
            55: {'slave_address': 55},
        }
    }
    assert plant.json() == (
        '{"register_caches": {"0": {"slave_address": 0}, "17": {"slave_address": 17}, '
        '"48": {"slave_address": 48}, "49": {"slave_address": 49}, "50": '
        '{"slave_address": 50}, "51": {"slave_address": 51}, "52": {"slave_address": '
        '52}, "53": {"slave_address": 53}, "54": {"slave_address": 54}, "55": '
        '{"slave_address": 55}}}'
    )


def test_plant(  # noqa: F811
    plant: Plant,
    register_cache_inverter_daytime_discharging_with_solar_generation,  # noqa: F811
    register_cache_battery_daytime_discharging,  # noqa: F811
):
    """Ensure we can instantiate a Plant from existing DTOs."""
    plant.register_caches[0x32] = register_cache_inverter_daytime_discharging_with_solar_generation
    plant.register_caches[0x32].update(register_cache_battery_daytime_discharging.items())

    i = Inverter.from_orm(register_cache_inverter_daytime_discharging_with_solar_generation)
    assert i.inverter_serial_number == 'SA1234G567'
    b = Battery.from_orm(register_cache_battery_daytime_discharging)
    assert b.battery_serial_number == 'BG1234G567'

    assert isinstance(plant.inverter, Inverter)
    assert plant.inverter == i
    assert isinstance(plant.batteries[0], Battery)
    assert plant.batteries[0] == b

    assert plant.dict() == {'register_caches': plant.register_caches}
    j = plant.json()
    assert len(j) > 5000

    assert Plant(**plant.dict()) == plant
    assert Plant.from_orm(plant) == plant


@pytest.mark.parametrize(PduTestCaseSig, CLIENT_MESSAGES)
def test_update(plant: Plant, str_repr, pdu_class_name, constructor_kwargs, mbap_header, inner_frame, ex):
    """Ensure we can update a Plant from PDU Response messages."""
    pdu = _lookup_pdu_class(pdu_class_name)(**constructor_kwargs)

    plant.update(pdu)
    d = plant.dict()
    j = plant.json()
    assert d.keys() == {'register_caches'}
    expected_slave_addresses = {0, 17, 48, 49, 50, 51, 52, 53, 54, 55}
    if hasattr(pdu, 'slave_address'):
        expected_slave_addresses.add(pdu.slave_address)
    assert set(d['register_caches'].keys()) == expected_slave_addresses
    if isinstance(pdu, ReadRegistersResponse):
        assert len(d['register_caches'][50].keys()) == 61
        assert len(j) > 800
    elif isinstance(pdu, WriteHoldingRegisterResponse):
        assert d['register_caches'][0x32] == {HoldingRegister(35): 8764, 'slave_address': 50}
        assert j == (
            '{"register_caches": {"0": {"slave_address": 0}, "17": {"slave_address": 17}, '
            '"48": {"slave_address": 48}, "49": {"slave_address": 49}, "50": '
            '{"slave_address": 50, "HR:35": 8764}, "51": {"slave_address": 51}, "52": '
            '{"slave_address": 52}, "53": {"slave_address": 53}, "54": {"slave_address": '
            '54}, "55": {"slave_address": 55}}}'
        )
    else:  # HeartbeatResponse / NullResponse
        expected_caches = {
            0: {'slave_address': 0},
            17: {'slave_address': 17},
            48: {'slave_address': 48},
            49: {'slave_address': 49},
            50: {'slave_address': 50},
            51: {'slave_address': 51},
            52: {'slave_address': 52},
            53: {'slave_address': 53},
            54: {'slave_address': 54},
            55: {'slave_address': 55},
        }
        if hasattr(pdu, 'slave_address'):
            expected_caches[pdu.slave_address] = {'slave_address': pdu.slave_address}
        assert d['register_caches'] == expected_caches
        assert j == json.dumps({'register_caches': expected_caches})


def test_from_actual():
    """Ensure we can instantiate a plant from actual register values."""
    register_caches = {
        0x0: RegisterCache(
            0x0,
            {
                InputRegister(0): 1,
                InputRegister(1): 3498,
                InputRegister(2): 3667,
                InputRegister(3): 3865,
                InputRegister(4): 0,
                InputRegister(5): 2392,
                InputRegister(6): 0,
                InputRegister(7): 1759,
                InputRegister(8): 8,
                InputRegister(9): 6,
                InputRegister(10): 37,
                InputRegister(11): 0,
                InputRegister(12): 9927,
                InputRegister(13): 4991,
                InputRegister(14): 5,
                InputRegister(15): 2868,
                InputRegister(16): 110,
                InputRegister(17): 98,
                InputRegister(18): 296,
                InputRegister(19): 91,
                InputRegister(20): 256,
                InputRegister(21): 0,
                InputRegister(22): 1213,
                InputRegister(23): 0,
                InputRegister(24): 873,
                InputRegister(25): 10,
                InputRegister(26): 261,
                InputRegister(27): 0,
                InputRegister(28): 6710,
                InputRegister(29): 0,
                InputRegister(30): 22,
                InputRegister(31): 0,
                InputRegister(32): 0,
                InputRegister(33): 17868,
                InputRegister(34): 0,
                InputRegister(35): 57,
                InputRegister(36): 82,
                InputRegister(37): 35,
                InputRegister(38): 0,
                InputRegister(39): 0,
                InputRegister(40): 0,
                InputRegister(41): 338,
                InputRegister(42): 825,
                InputRegister(43): 783,
                InputRegister(44): 190,
                InputRegister(45): 0,
                InputRegister(46): 14648,
                InputRegister(47): 0,
                InputRegister(48): 2524,
                InputRegister(49): 1,
                InputRegister(50): 5247,
                InputRegister(51): 678,
                InputRegister(52): 378,
                InputRegister(53): 2376,
                InputRegister(54): 4989,
                InputRegister(55): 334,
                InputRegister(56): 220,
                InputRegister(57): 0,
                InputRegister(58): 340,
                InputRegister(59): 99,
                HoldingRegister(0): 8193,
                HoldingRegister(1): 3,
                HoldingRegister(2): 298,
                HoldingRegister(3): 513,
                HoldingRegister(4): 0,
                HoldingRegister(5): 50,
                HoldingRegister(6): 360,
                HoldingRegister(7): 1,
                HoldingRegister(8): 16967,
                HoldingRegister(9): 12594,
                HoldingRegister(10): 13108,
                HoldingRegister(11): 18229,
                HoldingRegister(12): 13879,
                HoldingRegister(13): 21313,
                HoldingRegister(14): 12594,
                HoldingRegister(15): 13108,
                HoldingRegister(16): 18229,
                HoldingRegister(17): 13879,
                HoldingRegister(18): 35,
                HoldingRegister(19): 449,
                HoldingRegister(20): 0,
                HoldingRegister(21): 449,
                HoldingRegister(22): 2,
                HoldingRegister(23): 0,
                HoldingRegister(24): 32768,
                HoldingRegister(25): 3235,
                HoldingRegister(26): 60,
                HoldingRegister(27): 1,
                HoldingRegister(28): 0,
                HoldingRegister(29): 0,
                HoldingRegister(30): 17,
                HoldingRegister(31): 0,
                HoldingRegister(32): 4,
                HoldingRegister(33): 7,
                HoldingRegister(34): 140,
                HoldingRegister(35): 22,
                HoldingRegister(36): 4,
                HoldingRegister(37): 17,
                HoldingRegister(38): 18,
                HoldingRegister(39): 26,
                HoldingRegister(40): 2,
                HoldingRegister(41): 1,
                HoldingRegister(42): 2,
                HoldingRegister(43): 0,
                HoldingRegister(44): 0,
                HoldingRegister(45): 0,
                HoldingRegister(46): 11,
                HoldingRegister(47): 1,
                HoldingRegister(48): 0,
                HoldingRegister(49): 0,
                HoldingRegister(50): 10,
                HoldingRegister(51): 0,
                HoldingRegister(52): 0,
                HoldingRegister(53): 1,
                HoldingRegister(54): 1,
                HoldingRegister(55): 160,
                HoldingRegister(56): 160,
                HoldingRegister(57): 70,
                HoldingRegister(58): 1,
                HoldingRegister(59): 0,
            },
        ),
        0x11: RegisterCache(
            0x11,
            {
                InputRegister(0): 1,
                InputRegister(1): 3452,
                InputRegister(2): 3643,
                InputRegister(3): 3868,
                InputRegister(4): 0,
                InputRegister(5): 2393,
                InputRegister(6): 0,
                InputRegister(7): 1759,
                InputRegister(8): 8,
                InputRegister(9): 7,
                InputRegister(10): 40,
                InputRegister(11): 0,
                InputRegister(12): 9928,
                InputRegister(13): 4985,
                InputRegister(14): 5,
                InputRegister(15): 2859,
                InputRegister(16): 170,
                InputRegister(17): 99,
                InputRegister(18): 293,
                InputRegister(19): 91,
                InputRegister(20): 253,
                InputRegister(21): 0,
                InputRegister(22): 1213,
                InputRegister(23): 0,
                InputRegister(24): 945,
                InputRegister(25): 10,
                InputRegister(26): 261,
                InputRegister(27): 0,
                InputRegister(28): 6710,
                InputRegister(29): 0,
                InputRegister(30): 43,
                InputRegister(31): 0,
                InputRegister(32): 0,
                InputRegister(33): 17868,
                InputRegister(34): 0,
                InputRegister(35): 57,
                InputRegister(36): 82,
                InputRegister(37): 35,
                InputRegister(38): 0,
                InputRegister(39): 0,
                InputRegister(40): 0,
                InputRegister(41): 338,
                InputRegister(42): 92,
                InputRegister(43): 753,
                InputRegister(44): 190,
                InputRegister(45): 0,
                InputRegister(46): 14648,
                InputRegister(47): 0,
                InputRegister(48): 2524,
                InputRegister(49): 1,
                InputRegister(50): 5244,
                InputRegister(51): 882,
                InputRegister(52): 494,
                InputRegister(53): 2380,
                InputRegister(54): 4984,
                InputRegister(55): 333,
                InputRegister(56): 220,
                InputRegister(57): 0,
                InputRegister(58): 325,
                InputRegister(59): 99,
            },
        ),
        0x30: RegisterCache(
            0x30,
            {
                InputRegister(60): 0,
                InputRegister(61): 0,
                InputRegister(62): 0,
                InputRegister(63): 0,
                InputRegister(64): 0,
                InputRegister(65): 0,
                InputRegister(66): 0,
                InputRegister(67): 0,
                InputRegister(68): 0,
                InputRegister(69): 0,
                InputRegister(70): 0,
                InputRegister(71): 0,
                InputRegister(72): 0,
                InputRegister(73): 0,
                InputRegister(74): 0,
                InputRegister(75): 0,
                InputRegister(76): 0,
                InputRegister(77): 0,
                InputRegister(78): 0,
                InputRegister(79): 0,
                InputRegister(80): 0,
                InputRegister(81): 0,
                InputRegister(82): 0,
                InputRegister(83): 0,
                InputRegister(84): 0,
                InputRegister(85): 0,
                InputRegister(86): 0,
                InputRegister(87): 0,
                InputRegister(88): 0,
                InputRegister(89): 0,
                InputRegister(90): 0,
                InputRegister(91): 0,
                InputRegister(92): 0,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 0,
                InputRegister(97): 0,
                InputRegister(98): 0,
                InputRegister(99): 272,
                InputRegister(100): 0,
                InputRegister(101): 0,
                InputRegister(102): 0,
                InputRegister(103): 0,
                InputRegister(104): 0,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 0,
                InputRegister(111): 0,
                InputRegister(112): 0,
                InputRegister(113): 0,
                InputRegister(114): 0,
                InputRegister(115): 0,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
            },
        ),
        0x31: RegisterCache(
            0x31,
            {
                InputRegister(60): 0,
                InputRegister(61): 0,
                InputRegister(62): 0,
                InputRegister(63): 0,
                InputRegister(64): 0,
                InputRegister(65): 0,
                InputRegister(66): 0,
                InputRegister(67): 0,
                InputRegister(68): 0,
                InputRegister(69): 0,
                InputRegister(70): 0,
                InputRegister(71): 0,
                InputRegister(72): 0,
                InputRegister(73): 0,
                InputRegister(74): 0,
                InputRegister(75): 0,
                InputRegister(76): 0,
                InputRegister(77): 0,
                InputRegister(78): 0,
                InputRegister(79): 0,
                InputRegister(80): 0,
                InputRegister(81): 0,
                InputRegister(82): 0,
                InputRegister(83): 0,
                InputRegister(84): 0,
                InputRegister(85): 0,
                InputRegister(86): 0,
                InputRegister(87): 0,
                InputRegister(88): 0,
                InputRegister(89): 0,
                InputRegister(90): 0,
                InputRegister(91): 0,
                InputRegister(92): 0,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 0,
                InputRegister(97): 0,
                InputRegister(98): 0,
                InputRegister(99): 0,
                InputRegister(100): 0,
                InputRegister(101): 0,
                InputRegister(102): 0,
                InputRegister(103): 0,
                InputRegister(104): 0,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 0,
                InputRegister(111): 0,
                InputRegister(112): 0,
                InputRegister(113): 0,
                InputRegister(114): 0,
                InputRegister(115): 0,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
            },
        ),
        0x32: RegisterCache(
            0x32,
            {
                HoldingRegister(0): 8193,
                HoldingRegister(1): 3,
                HoldingRegister(2): 298,
                HoldingRegister(3): 513,
                HoldingRegister(4): 0,
                HoldingRegister(5): 50,
                HoldingRegister(6): 360,
                HoldingRegister(7): 1,
                HoldingRegister(8): 16967,
                HoldingRegister(9): 12594,
                HoldingRegister(10): 13108,
                HoldingRegister(11): 18229,
                HoldingRegister(12): 13879,
                HoldingRegister(13): 21313,
                HoldingRegister(14): 12594,
                HoldingRegister(15): 13108,
                HoldingRegister(16): 18229,
                HoldingRegister(17): 13879,
                HoldingRegister(18): 35,
                HoldingRegister(19): 449,
                HoldingRegister(20): 0,
                HoldingRegister(21): 449,
                HoldingRegister(22): 2,
                HoldingRegister(23): 0,
                HoldingRegister(24): 32768,
                HoldingRegister(25): 3235,
                HoldingRegister(26): 60,
                HoldingRegister(27): 1,
                HoldingRegister(28): 0,
                HoldingRegister(29): 0,
                HoldingRegister(30): 17,
                HoldingRegister(31): 0,
                HoldingRegister(32): 4,
                HoldingRegister(33): 7,
                HoldingRegister(34): 140,
                HoldingRegister(35): 22,
                HoldingRegister(36): 4,
                HoldingRegister(37): 17,
                HoldingRegister(38): 18,
                HoldingRegister(39): 24,
                HoldingRegister(40): 15,
                HoldingRegister(41): 1,
                HoldingRegister(42): 2,
                HoldingRegister(43): 0,
                HoldingRegister(44): 0,
                HoldingRegister(45): 0,
                HoldingRegister(46): 11,
                HoldingRegister(47): 1,
                HoldingRegister(48): 0,
                HoldingRegister(49): 0,
                HoldingRegister(50): 10,
                HoldingRegister(51): 0,
                HoldingRegister(52): 0,
                HoldingRegister(53): 1,
                HoldingRegister(54): 1,
                HoldingRegister(55): 160,
                HoldingRegister(56): 160,
                HoldingRegister(57): 700,
                HoldingRegister(58): 1,
                HoldingRegister(59): 0,
                HoldingRegister(60): 150,
                HoldingRegister(61): 30,
                HoldingRegister(62): 30,
                HoldingRegister(63): 1840,
                HoldingRegister(64): 2740,
                HoldingRegister(65): 4700,
                HoldingRegister(66): 5198,
                HoldingRegister(67): 126,
                HoldingRegister(68): 27,
                HoldingRegister(69): 24,
                HoldingRegister(70): 28,
                HoldingRegister(71): 1840,
                HoldingRegister(72): 2620,
                HoldingRegister(73): 4745,
                HoldingRegister(74): 5200,
                HoldingRegister(75): 126,
                HoldingRegister(76): 52,
                HoldingRegister(77): 1,
                HoldingRegister(78): 28,
                HoldingRegister(79): 1755,
                HoldingRegister(80): 2837,
                HoldingRegister(81): 4700,
                HoldingRegister(82): 5200,
                HoldingRegister(83): 2740,
                HoldingRegister(84): 0,
                HoldingRegister(85): 0,
                HoldingRegister(86): 0,
                HoldingRegister(87): 0,
                HoldingRegister(88): 0,
                HoldingRegister(89): 0,
                HoldingRegister(90): 0,
                HoldingRegister(91): 0,
                HoldingRegister(92): 0,
                HoldingRegister(93): 0,
                HoldingRegister(94): 30,
                HoldingRegister(95): 430,
                HoldingRegister(96): 1,
                HoldingRegister(97): 4320,
                HoldingRegister(98): 5850,
                HoldingRegister(99): 0,
                HoldingRegister(100): 0,
                HoldingRegister(101): 0,
                HoldingRegister(102): 0,
                HoldingRegister(103): 0,
                HoldingRegister(104): 0,
                HoldingRegister(105): 0,
                HoldingRegister(106): 0,
                HoldingRegister(107): 0,
                HoldingRegister(108): 6,
                HoldingRegister(109): 1,
                HoldingRegister(110): 4,
                HoldingRegister(111): 50,
                HoldingRegister(112): 50,
                HoldingRegister(113): 0,
                HoldingRegister(114): 4,
                HoldingRegister(115): 0,
                HoldingRegister(116): 10,
                HoldingRegister(117): 0,
                HoldingRegister(118): 0,
                HoldingRegister(119): 0,
                HoldingRegister(120): 0,
                HoldingRegister(121): 0,
                HoldingRegister(122): 0,
                HoldingRegister(123): 24,
                HoldingRegister(124): 0,
                HoldingRegister(125): 1,
                HoldingRegister(126): 0,
                HoldingRegister(127): 0,
                HoldingRegister(128): 1,
                HoldingRegister(129): 1,
                HoldingRegister(130): 255,
                HoldingRegister(131): 20,
                HoldingRegister(132): 255,
                HoldingRegister(133): 20,
                HoldingRegister(134): 255,
                HoldingRegister(135): 20,
                HoldingRegister(136): 255,
                HoldingRegister(137): 20,
                HoldingRegister(138): 2484,
                HoldingRegister(139): 2530,
                HoldingRegister(140): 2116,
                HoldingRegister(141): 270,
                HoldingRegister(142): 20,
                HoldingRegister(143): 5,
                HoldingRegister(144): 2415,
                HoldingRegister(145): 230,
                HoldingRegister(146): 0,
                HoldingRegister(147): 0,
                HoldingRegister(148): 0,
                HoldingRegister(149): 0,
                HoldingRegister(150): 0,
                HoldingRegister(151): 0,
                HoldingRegister(152): 0,
                HoldingRegister(153): 0,
                HoldingRegister(154): 0,
                HoldingRegister(155): 0,
                HoldingRegister(156): 0,
                HoldingRegister(157): 0,
                HoldingRegister(158): 0,
                HoldingRegister(159): 0,
                HoldingRegister(160): 0,
                HoldingRegister(161): 0,
                HoldingRegister(162): 0,
                HoldingRegister(163): 0,
                HoldingRegister(164): 0,
                HoldingRegister(165): 0,
                HoldingRegister(166): 0,
                HoldingRegister(167): 0,
                HoldingRegister(168): 0,
                HoldingRegister(169): 0,
                HoldingRegister(170): 0,
                HoldingRegister(171): 0,
                HoldingRegister(172): 0,
                HoldingRegister(173): 0,
                HoldingRegister(174): 0,
                HoldingRegister(175): 0,
                HoldingRegister(176): 0,
                HoldingRegister(177): 0,
                HoldingRegister(178): 0,
                HoldingRegister(179): 0,
                InputRegister(0): 1,
                InputRegister(1): 3474,
                InputRegister(2): 3667,
                InputRegister(3): 3861,
                InputRegister(4): 0,
                InputRegister(5): 2391,
                InputRegister(6): 0,
                InputRegister(7): 1759,
                InputRegister(8): 8,
                InputRegister(9): 6,
                InputRegister(10): 36,
                InputRegister(11): 0,
                InputRegister(12): 9928,
                InputRegister(13): 4990,
                InputRegister(14): 5,
                InputRegister(15): 2874,
                InputRegister(16): 11530,
                InputRegister(17): 99,
                InputRegister(18): 290,
                InputRegister(19): 91,
                InputRegister(20): 249,
                InputRegister(21): 0,
                InputRegister(22): 1213,
                InputRegister(23): 0,
                InputRegister(24): 813,
                InputRegister(25): 10,
                InputRegister(26): 261,
                InputRegister(27): 0,
                InputRegister(28): 6710,
                InputRegister(29): 0,
                InputRegister(30): 48,
                InputRegister(31): 0,
                InputRegister(32): 0,
                InputRegister(33): 17868,
                InputRegister(34): 0,
                InputRegister(35): 57,
                InputRegister(36): 82,
                InputRegister(37): 35,
                InputRegister(38): 0,
                InputRegister(39): 0,
                InputRegister(40): 0,
                InputRegister(41): 336,
                InputRegister(42): 765,
                InputRegister(43): 784,
                InputRegister(44): 190,
                InputRegister(45): 0,
                InputRegister(46): 14648,
                InputRegister(47): 0,
                InputRegister(48): 2524,
                InputRegister(49): 1,
                InputRegister(50): 5252,
                InputRegister(51): 560,
                InputRegister(52): 344,
                InputRegister(53): 2375,
                InputRegister(54): 4988,
                InputRegister(55): 334,
                InputRegister(56): 220,
                InputRegister(57): 0,
                InputRegister(58): 326,
                InputRegister(59): 99,
                InputRegister(60): 3279,
                InputRegister(61): 3282,
                InputRegister(62): 3280,
                InputRegister(63): 3274,
                InputRegister(64): 3280,
                InputRegister(65): 3275,
                InputRegister(66): 3277,
                InputRegister(67): 3279,
                InputRegister(68): 3282,
                InputRegister(69): 3282,
                InputRegister(70): 3280,
                InputRegister(71): 3277,
                InputRegister(72): 3282,
                InputRegister(73): 3282,
                InputRegister(74): 3283,
                InputRegister(75): 3285,
                InputRegister(76): 225,
                InputRegister(77): 214,
                InputRegister(78): 219,
                InputRegister(79): 209,
                InputRegister(80): 52467,
                InputRegister(81): 241,
                InputRegister(82): 0,
                InputRegister(83): 52051,
                InputRegister(84): 0,
                InputRegister(85): 19202,
                InputRegister(86): 0,
                InputRegister(87): 16000,
                InputRegister(88): 0,
                InputRegister(89): 18278,
                InputRegister(90): 0,
                InputRegister(91): 360,
                InputRegister(92): 256,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 107,
                InputRegister(97): 16,
                InputRegister(98): 3005,
                InputRegister(99): 0,
                InputRegister(100): 95,
                InputRegister(101): 0,
                InputRegister(102): 16000,
                InputRegister(103): 225,
                InputRegister(104): 214,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 16967,
                InputRegister(111): 12594,
                InputRegister(112): 13108,
                InputRegister(113): 18229,
                InputRegister(114): 13879,
                InputRegister(115): 8,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
                InputRegister(180): 8328,
                InputRegister(181): 8731,
                InputRegister(182): 35,
                InputRegister(183): 82,
                InputRegister(184): 0,
                InputRegister(185): 0,
                InputRegister(186): 0,
                InputRegister(187): 0,
                InputRegister(188): 0,
                InputRegister(189): 0,
                InputRegister(190): 0,
                InputRegister(191): 0,
                InputRegister(192): 0,
                InputRegister(193): 0,
                InputRegister(194): 0,
                InputRegister(195): 0,
                InputRegister(196): 0,
                InputRegister(197): 0,
                InputRegister(198): 0,
                InputRegister(199): 0,
                InputRegister(200): 0,
                InputRegister(201): 0,
                InputRegister(202): 0,
                InputRegister(203): 0,
                InputRegister(204): 0,
                InputRegister(205): 0,
                InputRegister(206): 0,
                InputRegister(207): 0,
                InputRegister(208): 0,
                InputRegister(209): 0,
                InputRegister(210): 0,
                InputRegister(211): 0,
                InputRegister(212): 0,
                InputRegister(213): 0,
                InputRegister(214): 0,
                InputRegister(215): 0,
                InputRegister(216): 0,
                InputRegister(217): 0,
                InputRegister(218): 0,
                InputRegister(219): 0,
                InputRegister(220): 0,
                InputRegister(221): 0,
                InputRegister(222): 0,
                InputRegister(223): 0,
                InputRegister(224): 0,
                InputRegister(225): 0,
                InputRegister(226): 0,
                InputRegister(227): 30,
                InputRegister(228): 0,
                InputRegister(229): 0,
                InputRegister(230): 0,
                InputRegister(231): 0,
                InputRegister(232): 0,
                InputRegister(233): 0,
                InputRegister(234): 0,
                InputRegister(235): 0,
                InputRegister(236): 0,
                InputRegister(237): 0,
                InputRegister(238): 0,
                InputRegister(239): 0,
            },
        ),
        0x33: RegisterCache(0x33),
        0x34: RegisterCache(
            0x34,
            {
                InputRegister(60): 0,
                InputRegister(61): 0,
                InputRegister(62): 0,
                InputRegister(63): 0,
                InputRegister(64): 0,
                InputRegister(65): 0,
                InputRegister(66): 0,
                InputRegister(67): 0,
                InputRegister(68): 0,
                InputRegister(69): 0,
                InputRegister(70): 0,
                InputRegister(71): 0,
                InputRegister(72): 0,
                InputRegister(73): 0,
                InputRegister(74): 0,
                InputRegister(75): 0,
                InputRegister(76): 0,
                InputRegister(77): 0,
                InputRegister(78): 0,
                InputRegister(79): 0,
                InputRegister(80): 0,
                InputRegister(81): 0,
                InputRegister(82): 0,
                InputRegister(83): 0,
                InputRegister(84): 0,
                InputRegister(85): 0,
                InputRegister(86): 0,
                InputRegister(87): 0,
                InputRegister(88): 0,
                InputRegister(89): 0,
                InputRegister(90): 0,
                InputRegister(91): 0,
                InputRegister(92): 0,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 0,
                InputRegister(97): 0,
                InputRegister(98): 0,
                InputRegister(99): 0,
                InputRegister(100): 0,
                InputRegister(101): 0,
                InputRegister(102): 0,
                InputRegister(103): 0,
                InputRegister(104): 0,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 0,
                InputRegister(111): 0,
                InputRegister(112): 0,
                InputRegister(113): 0,
                InputRegister(114): 0,
                InputRegister(115): 0,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
            },
        ),
        0x35: RegisterCache(
            0x35,
            {
                InputRegister(60): 0,
                InputRegister(61): 0,
                InputRegister(62): 0,
                InputRegister(63): 0,
                InputRegister(64): 0,
                InputRegister(65): 0,
                InputRegister(66): 0,
                InputRegister(67): 0,
                InputRegister(68): 0,
                InputRegister(69): 0,
                InputRegister(70): 0,
                InputRegister(71): 0,
                InputRegister(72): 0,
                InputRegister(73): 0,
                InputRegister(74): 0,
                InputRegister(75): 0,
                InputRegister(76): 0,
                InputRegister(77): 0,
                InputRegister(78): 0,
                InputRegister(79): 0,
                InputRegister(80): 0,
                InputRegister(81): 0,
                InputRegister(82): 0,
                InputRegister(83): 0,
                InputRegister(84): 0,
                InputRegister(85): 0,
                InputRegister(86): 0,
                InputRegister(87): 0,
                InputRegister(88): 0,
                InputRegister(89): 0,
                InputRegister(90): 0,
                InputRegister(91): 0,
                InputRegister(92): 0,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 0,
                InputRegister(97): 0,
                InputRegister(98): 0,
                InputRegister(99): 0,
                InputRegister(100): 0,
                InputRegister(101): 0,
                InputRegister(102): 0,
                InputRegister(103): 0,
                InputRegister(104): 0,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 0,
                InputRegister(111): 0,
                InputRegister(112): 0,
                InputRegister(113): 0,
                InputRegister(114): 0,
                InputRegister(115): 0,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
            },
        ),
        0x36: RegisterCache(
            0x36,
            {
                InputRegister(60): 0,
                InputRegister(61): 0,
                InputRegister(62): 0,
                InputRegister(63): 0,
                InputRegister(64): 0,
                InputRegister(65): 0,
                InputRegister(66): 0,
                InputRegister(67): 0,
                InputRegister(68): 0,
                InputRegister(69): 0,
                InputRegister(70): 0,
                InputRegister(71): 0,
                InputRegister(72): 0,
                InputRegister(73): 0,
                InputRegister(74): 0,
                InputRegister(75): 0,
                InputRegister(76): 0,
                InputRegister(77): 0,
                InputRegister(78): 0,
                InputRegister(79): 0,
                InputRegister(80): 0,
                InputRegister(81): 0,
                InputRegister(82): 0,
                InputRegister(83): 0,
                InputRegister(84): 0,
                InputRegister(85): 0,
                InputRegister(86): 0,
                InputRegister(87): 0,
                InputRegister(88): 0,
                InputRegister(89): 0,
                InputRegister(90): 0,
                InputRegister(91): 0,
                InputRegister(92): 0,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 0,
                InputRegister(97): 0,
                InputRegister(98): 0,
                InputRegister(99): 0,
                InputRegister(100): 0,
                InputRegister(101): 0,
                InputRegister(102): 0,
                InputRegister(103): 0,
                InputRegister(104): 0,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 0,
                InputRegister(111): 0,
                InputRegister(112): 0,
                InputRegister(113): 0,
                InputRegister(114): 0,
                InputRegister(115): 0,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
            },
        ),
        0x37: RegisterCache(
            0x37,
            {
                InputRegister(60): 0,
                InputRegister(61): 0,
                InputRegister(62): 0,
                InputRegister(63): 0,
                InputRegister(64): 0,
                InputRegister(65): 0,
                InputRegister(66): 0,
                InputRegister(67): 0,
                InputRegister(68): 0,
                InputRegister(69): 0,
                InputRegister(70): 0,
                InputRegister(71): 0,
                InputRegister(72): 0,
                InputRegister(73): 0,
                InputRegister(74): 0,
                InputRegister(75): 0,
                InputRegister(76): 0,
                InputRegister(77): 0,
                InputRegister(78): 0,
                InputRegister(79): 0,
                InputRegister(80): 0,
                InputRegister(81): 0,
                InputRegister(82): 0,
                InputRegister(83): 0,
                InputRegister(84): 0,
                InputRegister(85): 0,
                InputRegister(86): 0,
                InputRegister(87): 0,
                InputRegister(88): 0,
                InputRegister(89): 0,
                InputRegister(90): 0,
                InputRegister(91): 0,
                InputRegister(92): 0,
                InputRegister(93): 0,
                InputRegister(94): 0,
                InputRegister(95): 0,
                InputRegister(96): 0,
                InputRegister(97): 0,
                InputRegister(98): 0,
                InputRegister(99): 0,
                InputRegister(100): 0,
                InputRegister(101): 0,
                InputRegister(102): 0,
                InputRegister(103): 0,
                InputRegister(104): 0,
                InputRegister(105): 0,
                InputRegister(106): 0,
                InputRegister(107): 0,
                InputRegister(108): 0,
                InputRegister(109): 0,
                InputRegister(110): 0,
                InputRegister(111): 0,
                InputRegister(112): 0,
                InputRegister(113): 0,
                InputRegister(114): 0,
                InputRegister(115): 0,
                InputRegister(116): 0,
                InputRegister(117): 0,
                InputRegister(118): 0,
                InputRegister(119): 0,
            },
        ),
    }

    p = Plant(register_caches=register_caches)
    i = p.inverter
    assert i.dict() == {
        'active_power_rate': 10,
        'arm_firmware_version': 449,
        'battery_charge_limit': 50,
        'battery_discharge_limit': 50,
        'battery_discharge_min_power_reserve': 4,
        'battery_low_force_charge_time': 6,
        'battery_nominal_capacity': 160.0,
        'battery_percent': 99,
        'battery_power_mode': 1,
        'battery_soc_reserve': 4,
        'battery_type': 1,
        'battery_voltage_adjust': 0,
        'bms_chip_version': 11,
        'charge_and_discharge_soc': (0, 0),
        'charge_slot_1': (datetime.time(0, 30), datetime.time(4, 30)),
        'charge_slot_2': (datetime.time(0, 0), datetime.time(0, 4)),
        'charge_soc_stop_1': 0,
        'charge_soc_stop_2': 0,
        'charge_status': 5,
        'charge_target_soc': 10,
        'charger_warning_code': 0,
        'ct_adjust': 2,
        'dci_1_i': 0.0,
        'dci_1_time': 0,
        'dci_2_i': 0.0,
        'dci_2_time': 0,
        'dci_fault_value': 0.0,
        'device_type_code': '2001',
        'discharge_slot_1': (datetime.time(1, 0), datetime.time(7, 0)),
        'discharge_slot_2': (datetime.time(0, 0), datetime.time(0, 0)),
        'discharge_soc_stop_1': 0,
        'discharge_soc_stop_2': 0,
        'dsp_firmware_version': 449,
        'e_battery_charge_day': 8.2,
        'e_battery_charge_day_2': 8.2,
        'e_battery_charge_total': 873.1,
        'e_battery_discharge_day': 3.5,
        'e_battery_discharge_day_2': 3.5,
        'e_battery_discharge_total': 832.8,
        'e_battery_throughput_total': 175.9,
        'e_discharge_year': 0.0,
        'e_grid_in_day': 26.1,
        'e_grid_in_total': 1786.8,
        'e_grid_out_day': 1.0,
        'e_grid_out_total': 121.3,
        'e_inverter_in_day': 5.7,
        'e_inverter_in_total': 671.0,
        'e_inverter_out_day': 19.0,
        'e_inverter_out_total': 1464.8,
        'e_pv1_day': 9.9,
        'e_pv2_day': 9.1,
        'e_pv_total': 992.8,
        'e_solar_diverter': 0.0,
        'enable_60hz_freq_mode': False,
        'enable_above_6kw_system': False,
        'enable_ammeter': True,
        'enable_auto_judge_battery_type': True,
        'enable_bms_read': True,
        'enable_buzzer': False,
        'enable_charge': True,
        'enable_charge_target': False,
        'enable_discharge': False,
        'enable_drm_rj45_port': True,
        'enable_frequency_derating': True,
        'enable_low_voltage_fault_ride_through': False,
        'enable_spi': True,
        'f_ac1': 49.9,
        'f_ac_fault_value': 0.0,
        'f_ac_high_c': 52.0,
        'f_ac_high_in': 52.0,
        'f_ac_high_in_time': 28,
        'f_ac_high_out': 51.98,
        'f_ac_high_out_time': 28,
        'f_ac_low_c': 47.0,
        'f_ac_low_in': 47.45,
        'f_ac_low_in_time': 1,
        'f_ac_low_out': 47.0,
        'f_ac_low_out_time': 24,
        'f_eps_backup': 49.88,
        'fault_code': 0,
        'firmware_version': 'D0.449-A0.449',
        'first_battery_bms_firmware_version': 35,
        'first_battery_serial_number': 'BG1234G567',
        'frequency_load_limit_rate': 24,
        'gfci_1_i': 0.0,
        'gfci_1_time': 0,
        'gfci_2_i': 0.0,
        'gfci_2_time': 0,
        'gfci_fault_value': 0.0,
        'grid_port_max_power_output': 60,
        'grid_power_adjust': 0,
        'grid_r_voltage_adjust': 0,
        'grid_s_voltage_adjust': 0,
        'grid_t_voltage_adjust': 0,
        'i_ac1': 0.36,
        'i_battery': 5.6,
        'i_grid_port': 3.26,
        'i_pv1': 0.08,
        'i_pv2': 0.06,
        'inverter_countdown': 0,
        'inverter_modbus_address': 17,
        'inverter_model': 'Hybrid',
        'inverter_module': 196906,
        'inverter_restart_delay_time': 30,
        'inverter_serial_number': 'SA1234G567',
        'inverter_start_time': 30,
        'inverter_state': (0, 1),
        'inverter_status': 1,
        'island_check_continue': 0,
        'iso1': 0,
        'iso2': 0,
        'iso_fault_value': 0.0,
        'local_command_test': False,
        'meter_type': 1,
        'modbus_version': 1.4,
        'num_mppt': 2,
        'num_phases': 1,
        'p_battery': 344,
        'p_eps_backup': 0,
        'p_grid_apparent': 784,
        'p_grid_out': 48,
        'p_inverter_out': 813,
        'p_load_demand': 765,
        'p_pv1': 290,
        'p_pv2': 249,
        'pf_cmd_memory_state': True,
        'pf_inverter_out': 0.153,
        'pf_limit_lp1_lp': 255,
        'pf_limit_lp1_pf': -0.998,
        'pf_limit_lp2_lp': 255,
        'pf_limit_lp2_pf': -0.998,
        'pf_limit_lp3_lp': 255,
        'pf_limit_lp3_pf': -0.998,
        'pf_limit_lp4_lp': 255,
        'pf_limit_lp4_pf': -0.998,
        'power_factor': -1,
        'power_factor_function_model': 0,
        'pv1_power_adjust': 0,
        'pv1_voltage_adjust': 0,
        'pv2_power_adjust': 0,
        'pv2_voltage_adjust': 0,
        'reactive_power_rate': 0,
        'real_v_f_value': 0.0,
        'remote_bms_restart': False,
        'reverse_115_meter_direct': False,
        'reverse_418_meter_direct': False,
        'safety_time_limit': 0.0,
        'safety_v_f_limit': 0.0,
        'select_arm_chip': False,
        'soc_force_adjust': 0,
        'start_system_auto_test': False,
        'system_mode': 1,
        'system_time': datetime.datetime(2022, 4, 17, 18, 24, 15),
        'temp_battery': 22.0,
        'temp_charger': 33.4,
        'temp_fault_value': 0.0,
        'temp_inverter_heatsink': 33.6,
        'test_treat_time': 0,
        'test_treat_value': 0.0,
        'test_value': 0.0,
        'usb_device_inserted': 2,
        'user_code': 7,
        'v_10_min_protection': 274.0,
        'v_ac1': 239.1,
        'v_ac_fault_value': 0.0,
        'v_ac_high_c': 283.7,
        'v_ac_high_in': 262.0,
        'v_ac_high_in_time': 52,
        'v_ac_high_out': 274.0,
        'v_ac_high_out_time': 27,
        'v_ac_low_c': 175.5,
        'v_ac_low_in': 184.0,
        'v_ac_low_in_time': 126,
        'v_ac_low_out': 184.0,
        'v_ac_low_out_time': 126,
        'v_battery': 52.52,
        'v_battery_over_protection_limit': 58.5,
        'v_battery_under_protection_limit': 43.2,
        'v_eps_backup': 237.5,
        'v_highbrigh_bus': 2874,
        'v_n_bus': 0.0,
        'v_p_bus': 386.1,
        'v_pv1': 347.4,
        'v_pv2': 366.7,
        'v_pv_fault_value': 0.0,
        'v_pv_input_start': 15.0,
        'variable_address': 32768,
        'variable_value': 3235,
        'work_time_total': 2524,
    }

    assert p.number_batteries == 1
    b = p.batteries[0]
    assert b.dict() == {
        'battery_serial_number': 'BG1234G567',
        'bms_firmware_version': 3005,
        'design_capacity': 160.0,
        'design_capacity_2': 160.0,
        'e_charge_total': 0.0,
        'e_discharge_total': 0.0,
        'full_capacity': 192.02,
        'num_cells': 16,
        'num_cycles': 107,
        'remaining_capacity': 182.78,
        'soc': 95,
        'status_1_2': (0, 0),
        'status_3_4': (1, 104),
        'status_5_6': (1, 0),
        'status_7': (0, 0),
        'temp_bms_mos': 24.1,
        'temp_cells_1': 22.5,
        'temp_cells_2': 21.4,
        'temp_cells_3': 21.9,
        'temp_cells_4': 20.9,
        'temp_max': 22.5,
        'temp_min': 21.4,
        'usb_inserted': 8,
        'v_battery_out': 52.051,
        'v_cell_01': 3.279,
        'v_cell_02': 3.282,
        'v_cell_03': 3.28,
        'v_cell_04': 3.274,
        'v_cell_05': 3.28,
        'v_cell_06': 3.275,
        'v_cell_07': 3.277,
        'v_cell_08': 3.279,
        'v_cell_09': 3.282,
        'v_cell_10': 3.282,
        'v_cell_11': 3.28,
        'v_cell_12': 3.277,
        'v_cell_13': 3.282,
        'v_cell_14': 3.282,
        'v_cell_15': 3.283,
        'v_cell_16': 3.285,
        'v_cells_sum': 52.467,
        'warning_1_2': (0, 0),
    }
